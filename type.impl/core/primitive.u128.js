(function() {
    var type_impls = Object.fromEntries([["crypto_bigint",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUInt%3C%7Bnlimbs!(%24bits)%7D%3E%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/crypto_bigint/uint/from.rs.html#170-175\">source</a><a href=\"#impl-From%3CUInt%3C%7Bnlimbs!(%24bits)%7D%3E%3E-for-u128\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"crypto_bigint/struct.UInt.html\" title=\"struct crypto_bigint::UInt\">UInt</a>&lt;{nlimbs!($bits)}&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crypto_bigint/uint/from.rs.html#171-174\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(n: <a class=\"type\" href=\"crypto_bigint/type.U128.html\" title=\"type crypto_bigint::U128\">U128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<UInt<{nlimbs!($bits)}>>","crypto_bigint::limb::Wide"]]],["trussed",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[1586,15]}