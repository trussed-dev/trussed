(function() {var type_impls = {
"p256":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#61-65\">source</a><a href=\"#impl-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#68\">source</a><h4 class=\"code-header\">pub fn <a href=\"ecdsa/sign/struct.SigningKey.html#tymethod.random\" class=\"fn\">random</a>(rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>) -&gt; <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Generate a cryptographically random <a href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\"><code>SigningKey</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#75\">source</a><h4 class=\"code-header\">pub fn <a href=\"ecdsa/sign/struct.SigningKey.html#tymethod.from_bytes\" class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;, <a class=\"struct\" href=\"p256/ecdsa/struct.Error.html\" title=\"struct p256::ecdsa::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Initialize signing key from a raw scalar serialized as a byte slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verifying_key\" class=\"method\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#86\">source</a><h4 class=\"code-header\">pub fn <a href=\"ecdsa/sign/struct.SigningKey.html#tymethod.verifying_key\" class=\"fn\">verifying_key</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ecdsa/verify/struct.VerifyingKey.html\" title=\"struct ecdsa::verify::VerifyingKey\">VerifyingKey</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Get the <a href=\"ecdsa/verify/struct.VerifyingKey.html\" title=\"struct ecdsa::verify::VerifyingKey\"><code>VerifyingKey</code></a> which corresponds to this <a href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\"><code>SigningKey</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#93\">source</a><h4 class=\"code-header\">pub fn <a href=\"ecdsa/sign/struct.SigningKey.html#tymethod.to_bytes\" class=\"fn\">to_bytes</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>, &lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Serialize this <a href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\"><code>SigningKey</code></a> as bytes</p>\n</div></details></div></details>",0,"p256::ecdsa::SigningKey"],["<section id=\"impl-Eq-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#132-136\">source</a><a href=\"#impl-Eq-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section>","Eq","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signer%3CSignature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#192-197\">source</a><a href=\"#impl-Signer%3CSignature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"signature/signer/trait.Signer.html\" title=\"trait signature::signer::Signer\">Signer</a>&lt;<a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;: <a class=\"trait\" href=\"signature/signer/trait.DigestSigner.html\" title=\"trait signature::signer::DigestSigner\">DigestSigner</a>&lt;&lt;C as <a class=\"trait\" href=\"ecdsa/hazmat/trait.DigestPrimitive.html\" title=\"trait ecdsa::hazmat::DigestPrimitive\">DigestPrimitive</a>&gt;::<a class=\"associatedtype\" href=\"ecdsa/hazmat/trait.DigestPrimitive.html#associatedtype.Digest\" title=\"type ecdsa::hazmat::DigestPrimitive::Digest\">Digest</a>, <a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;&gt;,\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a> + <a class=\"trait\" href=\"ecdsa/hazmat/trait.DigestPrimitive.html\" title=\"trait ecdsa::hazmat::DigestPrimitive\">DigestPrimitive</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_sign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#199\">source</a><a href=\"#method.try_sign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.Signer.html#tymethod.try_sign\" class=\"fn\">try_sign</a>(&amp;self, msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;, <a class=\"struct\" href=\"p256/ecdsa/struct.Error.html\" title=\"struct p256::ecdsa::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempt to sign the given message, returning a digital signature on\nsuccess, or an error if something went wrong. <a href=\"signature/signer/trait.Signer.html#tymethod.try_sign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/signature/signer.rs.html#15\">source</a><a href=\"#method.sign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.Signer.html#method.sign\" class=\"fn\">sign</a>(&amp;self, msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>]) -&gt; S</h4></section></summary><div class='docblock'>Sign the given message and return a digital signature</div></details></div></details>","Signer<Signature<C>>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeEq-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#98-102\">source</a><a href=\"#impl-ConstantTimeEq-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\">ConstantTimeEq</a> for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#104\">source</a><a href=\"#method.ct_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\" class=\"fn\">ct_eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are equal. <a href=\"subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/subtle/lib.rs.html#294\">source</a><a href=\"#method.ct_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConstantTimeEq.html#method.ct_ne\" class=\"fn\">ct_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are NOT equal. <a href=\"subtle/trait.ConstantTimeEq.html#method.ct_ne\">Read more</a></div></details></div></details>","ConstantTimeEq","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RandomizedDigestSigner%3CD,+Signature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#204-209\">source</a><a href=\"#impl-RandomizedDigestSigner%3CD,+Signature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, D&gt; <a class=\"trait\" href=\"signature/signer/trait.RandomizedDigestSigner.html\" title=\"trait signature::signer::RandomizedDigestSigner\">RandomizedDigestSigner</a>&lt;D, <a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    D: <a class=\"trait\" href=\"digest/fixed/trait.FixedOutput.html\" title=\"trait digest::fixed::FixedOutput\">FixedOutput</a>&lt;OutputSize = &lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a>&gt; + <a class=\"trait\" href=\"digest/trait.BlockInput.html\" title=\"trait digest::BlockInput\">BlockInput</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"digest/trait.Reset.html\" title=\"trait digest::Reset\">Reset</a> + <a class=\"trait\" href=\"digest/trait.Update.html\" title=\"trait digest::Update\">Update</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_sign_digest_with_rng\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#214-218\">source</a><a href=\"#method.try_sign_digest_with_rng\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.RandomizedDigestSigner.html#tymethod.try_sign_digest_with_rng\" class=\"fn\">try_sign_digest_with_rng</a>(\n    &amp;self,\n    rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>,\n    digest: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;, <a class=\"struct\" href=\"p256/ecdsa/struct.Error.html\" title=\"struct p256::ecdsa::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Sign message prehash using an ephemeral scalar (<code>k</code>) derived according\nto a variant of RFC 6979 (Section 3.6) which supplies additional\nentropy from an RNG.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_digest_with_rng\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/signature/signer.rs.html#97\">source</a><a href=\"#method.sign_digest_with_rng\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.RandomizedDigestSigner.html#method.sign_digest_with_rng\" class=\"fn\">sign_digest_with_rng</a>(&amp;self, rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>, digest: D) -&gt; S</h4></section></summary><div class='docblock'>Sign the given prehashed message <code>Digest</code>, returning a signature. <a href=\"signature/signer/trait.RandomizedDigestSigner.html#method.sign_digest_with_rng\">Read more</a></div></details></div></details>","RandomizedDigestSigner<D, Signature<C>>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#109-113\">source</a><a href=\"#impl-Debug-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#115\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSecretKey%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#151-155\">source</a><a href=\"#impl-From%3CSecretKey%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#157\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(secret_key: <a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SecretKey<C>>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZeroScalar%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#240-244\">source</a><a href=\"#impl-From%3CNonZeroScalar%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#246\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(secret_scalar: <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NonZeroScalar<C>>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26SecretKey%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#162-166\">source</a><a href=\"#impl-From%3C%26SecretKey%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#168\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(secret_key: &amp;<a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&SecretKey<C>>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#121-125\">source</a><a href=\"#impl-Drop-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#127\">source</a><a href=\"#method.drop\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#140-144\">source</a><a href=\"#impl-PartialEq-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#146\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RandomizedSigner%3CSignature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#228-233\">source</a><a href=\"#impl-RandomizedSigner%3CSignature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"signature/signer/trait.RandomizedSigner.html\" title=\"trait signature::signer::RandomizedSigner\">RandomizedSigner</a>&lt;<a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;: <a class=\"trait\" href=\"signature/signer/trait.RandomizedDigestSigner.html\" title=\"trait signature::signer::RandomizedDigestSigner\">RandomizedDigestSigner</a>&lt;&lt;C as <a class=\"trait\" href=\"ecdsa/hazmat/trait.DigestPrimitive.html\" title=\"trait ecdsa::hazmat::DigestPrimitive\">DigestPrimitive</a>&gt;::<a class=\"associatedtype\" href=\"ecdsa/hazmat/trait.DigestPrimitive.html#associatedtype.Digest\" title=\"type ecdsa::hazmat::DigestPrimitive::Digest\">Digest</a>, <a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;&gt;,\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a> + <a class=\"trait\" href=\"ecdsa/hazmat/trait.DigestPrimitive.html\" title=\"trait ecdsa::hazmat::DigestPrimitive\">DigestPrimitive</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_sign_with_rng\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#235\">source</a><a href=\"#method.try_sign_with_rng\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.RandomizedSigner.html#tymethod.try_sign_with_rng\" class=\"fn\">try_sign_with_rng</a>(\n    &amp;self,\n    rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>,\n    msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;, <a class=\"struct\" href=\"p256/ecdsa/struct.Error.html\" title=\"struct p256::ecdsa::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempt to sign the given message, returning a digital signature on\nsuccess, or an error if something went wrong. <a href=\"signature/signer/trait.RandomizedSigner.html#tymethod.try_sign_with_rng\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_with_rng\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/signature/signer.rs.html#71\">source</a><a href=\"#method.sign_with_rng\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.RandomizedSigner.html#method.sign_with_rng\" class=\"fn\">sign_with_rng</a>(&amp;self, rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>, msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>]) -&gt; S</h4></section></summary><div class='docblock'>Sign the given message and return a digital signature</div></details></div></details>","RandomizedSigner<Signature<C>>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DigestSigner%3CD,+Signature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#175-180\">source</a><a href=\"#impl-DigestSigner%3CD,+Signature%3CC%3E%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C, D&gt; <a class=\"trait\" href=\"signature/signer/trait.DigestSigner.html\" title=\"trait signature::signer::DigestSigner\">DigestSigner</a>&lt;D, <a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    D: <a class=\"trait\" href=\"digest/fixed/trait.FixedOutput.html\" title=\"trait digest::fixed::FixedOutput\">FixedOutput</a>&lt;OutputSize = &lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a>&gt; + <a class=\"trait\" href=\"digest/trait.BlockInput.html\" title=\"trait digest::BlockInput\">BlockInput</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"digest/trait.Reset.html\" title=\"trait digest::Reset\">Reset</a> + <a class=\"trait\" href=\"digest/trait.Update.html\" title=\"trait digest::Update\">Update</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_sign_digest\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#185\">source</a><a href=\"#method.try_sign_digest\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.DigestSigner.html#tymethod.try_sign_digest\" class=\"fn\">try_sign_digest</a>(&amp;self, digest: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ecdsa/struct.Signature.html\" title=\"struct ecdsa::Signature\">Signature</a>&lt;C&gt;, <a class=\"struct\" href=\"p256/ecdsa/struct.Error.html\" title=\"struct p256::ecdsa::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Sign message prehash using a deterministic ephemeral scalar (<code>k</code>)\ncomputed using the algorithm described in RFC 6979 (Section 3.2):\n<a href=\"https://tools.ietf.org/html/rfc6979#section-3\">https://tools.ietf.org/html/rfc6979#section-3</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_digest\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/signature/signer.rs.html#56\">source</a><a href=\"#method.sign_digest\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"signature/signer/trait.DigestSigner.html#method.sign_digest\" class=\"fn\">sign_digest</a>(&amp;self, digest: D) -&gt; S</h4></section></summary><div class='docblock'>Sign the given prehashed message <a href=\"digest/digest/trait.Digest.html\" title=\"trait digest::digest::Digest\"><code>Digest</code></a>, returning a signature. <a href=\"signature/signer/trait.DigestSigner.html#method.sign_digest\">Read more</a></div></details></div></details>","DigestSigner<D, Signature<C>>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#253-257\">source</a><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"p256/ecdsa/struct.Error.html\" title=\"struct p256::ecdsa::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#261\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;, <a class=\"struct\" href=\"p256/ecdsa/struct.Error.html\" title=\"struct p256::ecdsa::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","p256::ecdsa::SigningKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SigningKey%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#50\">source</a><a href=\"#impl-Clone-for-SigningKey%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ecdsa/sign.rs.html#50\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ecdsa/sign/struct.SigningKey.html\" title=\"struct ecdsa::sign::SigningKey\">SigningKey</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/core/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","p256::ecdsa::SigningKey"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()