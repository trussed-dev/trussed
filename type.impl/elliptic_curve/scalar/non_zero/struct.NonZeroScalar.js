(function() {
    var type_impls = Object.fromEntries([["p256",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%3CC+as+ScalarArithmetic%3E::Scalar%3E-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#65-67\">source</a><a href=\"#impl-AsRef%3C%3CC+as+ScalarArithmetic%3E::Scalar%3E-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>&gt; for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#69\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;&lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<<C as ScalarArithmetic>::Scalar>","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#27\">source</a><a href=\"#impl-Clone-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#27\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConditionallySelectable-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#74-76\">source</a><a href=\"#impl-ConditionallySelectable-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a> for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#78\">source</a><a href=\"#method.conditional_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\" class=\"fn\">conditional_select</a>(\n    a: &amp;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;,\n    b: &amp;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;,\n    choice: <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>,\n) -&gt; <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Select <code>a</code> or <code>b</code> according to <code>choice</code>. <a href=\"subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/subtle/lib.rs.html#442\">source</a><a href=\"#method.conditional_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConditionallySelectable.html#method.conditional_assign\" class=\"fn\">conditional_assign</a>(&amp;mut self, other: &amp;Self, choice: <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally assign <code>other</code> to <code>self</code>, according to <code>choice</code>. <a href=\"subtle/trait.ConditionallySelectable.html#method.conditional_assign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_swap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/subtle/lib.rs.html#469\">source</a><a href=\"#method.conditional_swap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConditionallySelectable.html#method.conditional_swap\" class=\"fn\">conditional_swap</a>(a: &amp;mut Self, b: &amp;mut Self, choice: <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally swap <code>self</code> and <code>other</code> if <code>choice == 1</code>; otherwise,\nreassign both unto themselves. <a href=\"subtle/trait.ConditionallySelectable.html#method.conditional_swap\">Read more</a></div></details></div></details>","ConditionallySelectable","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeEq-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#85-87\">source</a><a href=\"#impl-ConstantTimeEq-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\">ConstantTimeEq</a> for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#89\">source</a><a href=\"#method.ct_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\" class=\"fn\">ct_eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are equal. <a href=\"subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/subtle/lib.rs.html#284\">source</a><a href=\"#method.ct_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"subtle/trait.ConstantTimeEq.html#method.ct_ne\" class=\"fn\">ct_ne</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are NOT equal. <a href=\"subtle/trait.ConstantTimeEq.html#method.ct_ne\">Read more</a></div></details></div></details>","ConstantTimeEq","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#96-98\">source</a><a href=\"#impl-Deref-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#100\">source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#102\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26SecretKey%3CC%3E%3E-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#138-140\">source</a><a href=\"#impl-From%3C%26SecretKey%3CC%3E%3E-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#142\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sk: &amp;<a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&SecretKey<C>>","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSecretKey%3CC%3E%3E-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#127-129\">source</a><a href=\"#impl-From%3CSecretKey%3CC%3E%3E-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#131\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sk: <a class=\"struct\" href=\"elliptic_curve/secret_key/struct.SecretKey.html\" title=\"struct elliptic_curve::secret_key::SecretKey\">SecretKey</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SecretKey<C>>","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Invert-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#149-151\">source</a><a href=\"#impl-Invert-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a> for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.invert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#156\">source</a><a href=\"#method.invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"elliptic_curve/ops/trait.Invert.html#tymethod.invert\" class=\"fn\">invert</a>(&amp;self) -&gt; <a class=\"struct\" href=\"subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;&lt;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt; as <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/ops/trait.Invert.html#associatedtype.Output\" title=\"type elliptic_curve::ops::Invert::Output\">Output</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Perform a scalar inversion</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#153\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"elliptic_curve/ops/trait.Invert.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>Field element type</div></details></div></details>","Invert","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#35-37\">source</a><a href=\"#impl-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#40\">source</a><h4 class=\"code-header\">pub fn <a href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html#tymethod.random\" class=\"fn\">random</a>(rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>) -&gt; <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Generate a random <code>NonZeroScalar</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_repr\" class=\"method\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#50\">source</a><h4 class=\"code-header\">pub fn <a href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html#tymethod.from_repr\" class=\"fn\">from_repr</a>(\n    repr: <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/core/primitive.u8.html\">u8</a>, &lt;&lt;C as <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/trait.Curve.html#associatedtype.UInt\" title=\"type elliptic_curve::Curve::UInt\">UInt</a> as <a class=\"trait\" href=\"crypto_bigint/array/trait.ArrayEncoding.html\" title=\"trait crypto_bigint::array::ArrayEncoding\">ArrayEncoding</a>&gt;::<a class=\"associatedtype\" href=\"crypto_bigint/array/trait.ArrayEncoding.html#associatedtype.ByteSize\" title=\"type crypto_bigint::array::ArrayEncoding::ByteSize\">ByteSize</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Decode a <a href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\"><code>NonZeroScalar</code></a> from a serialized field element</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#56\">source</a><h4 class=\"code-header\">pub fn <a href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html#tymethod.new\" class=\"fn\">new</a>(scalar: &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <a href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\"><code>NonZeroScalar</code></a> from a scalar.</p>\n</div></details></div></details>",0,"p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#161-163\">source</a><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/core/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#165\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"elliptic_curve/error/struct.Error.html\" title=\"struct elliptic_curve::error::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#167\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;, <a class=\"struct\" href=\"elliptic_curve/error/struct.Error.html\" title=\"struct elliptic_curve::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CScalarBytes%3CC%3E%3E-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/bytes.rs.html#202-204\">source</a><a href=\"#impl-TryFrom%3CScalarBytes%3CC%3E%3E-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"elliptic_curve/scalar/bytes/struct.ScalarBytes.html\" title=\"struct elliptic_curve::scalar::bytes::ScalarBytes\">ScalarBytes</a>&lt;C&gt;&gt; for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/bytes.rs.html#206\">source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"elliptic_curve/error/struct.Error.html\" title=\"struct elliptic_curve::error::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/bytes.rs.html#208\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(bytes: <a class=\"struct\" href=\"elliptic_curve/scalar/bytes/struct.ScalarBytes.html\" title=\"struct elliptic_curve::scalar::bytes::ScalarBytes\">ScalarBytes</a>&lt;C&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;, <a class=\"struct\" href=\"elliptic_curve/error/struct.Error.html\" title=\"struct elliptic_curve::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<ScalarBytes<C>>","p256::NonZeroScalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#177-180\">source</a><a href=\"#impl-Zeroize-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#182\">source</a><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zeroize/trait.Zeroize.html#tymethod.zeroize\" class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","p256::NonZeroScalar"],["<section id=\"impl-Copy-for-NonZeroScalar%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/scalar/non_zero.rs.html#94\">source</a><a href=\"#impl-Copy-for-NonZeroScalar%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"elliptic_curve/scalar/non_zero/struct.NonZeroScalar.html\" title=\"struct elliptic_curve::scalar::non_zero::NonZeroScalar\">NonZeroScalar</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/trait.Curve.html\" title=\"trait elliptic_curve::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,</div></h3></section>","Copy","p256::NonZeroScalar"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[36130]}