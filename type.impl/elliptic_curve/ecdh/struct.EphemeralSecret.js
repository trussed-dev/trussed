(function() {
    var type_impls = Object.fromEntries([["p256",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-EphemeralSecret%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#154-157\">source</a><a href=\"#impl-Drop-for-EphemeralSecret%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html\" title=\"struct elliptic_curve::ecdh::EphemeralSecret\">EphemeralSecret</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#159\">source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","p256::ecdh::EphemeralSecret"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EphemeralSecret%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#104-109\">source</a><a href=\"#impl-EphemeralSecret%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"struct\" href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html\" title=\"struct elliptic_curve::ecdh::EphemeralSecret\">EphemeralSecret</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.AffineArithmetic.html\" title=\"trait elliptic_curve::arithmetic::AffineArithmetic\">AffineArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.AffineArithmetic.html#associatedtype.AffinePoint\" title=\"type elliptic_curve::arithmetic::AffineArithmetic::AffinePoint\">AffinePoint</a>: <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,\n    <a class=\"struct\" href=\"elliptic_curve/ecdh/struct.SharedSecret.html\" title=\"struct elliptic_curve::ecdh::SharedSecret\">SharedSecret</a>&lt;C&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.AffineArithmetic.html\" title=\"trait elliptic_curve::arithmetic::AffineArithmetic\">AffineArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.AffineArithmetic.html#associatedtype.AffinePoint\" title=\"type elliptic_curve::arithmetic::AffineArithmetic::AffinePoint\">AffinePoint</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#112\">source</a><h4 class=\"code-header\">pub fn <a href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html#tymethod.random\" class=\"fn\">random</a>(rng: impl <a class=\"trait\" href=\"rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>) -&gt; <a class=\"struct\" href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html\" title=\"struct elliptic_curve::ecdh::EphemeralSecret\">EphemeralSecret</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Generate a cryptographically random <a href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html\" title=\"struct elliptic_curve::ecdh::EphemeralSecret\"><code>EphemeralSecret</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.public_key\" class=\"method\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#121\">source</a><h4 class=\"code-header\">pub fn <a href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html#tymethod.public_key\" class=\"fn\">public_key</a>(&amp;self) -&gt; <a class=\"struct\" href=\"elliptic_curve/public_key/struct.PublicKey.html\" title=\"struct elliptic_curve::public_key::PublicKey\">PublicKey</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Get the public key associated with this ephemeral secret.</p>\n<p>The <code>compress</code> flag enables point compression.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.diffie_hellman\" class=\"method\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html#tymethod.diffie_hellman\" class=\"fn\">diffie_hellman</a>(&amp;self, public_key: &amp;<a class=\"struct\" href=\"elliptic_curve/public_key/struct.PublicKey.html\" title=\"struct elliptic_curve::public_key::PublicKey\">PublicKey</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"elliptic_curve/ecdh/struct.SharedSecret.html\" title=\"struct elliptic_curve::ecdh::SharedSecret\">SharedSecret</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Compute a Diffie-Hellman shared secret from an ephemeral secret and the\npublic key of the other participant in the exchange.</p>\n</div></details></div></details>",0,"p256::ecdh::EphemeralSecret"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-EphemeralSecret%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#144-147\">source</a><a href=\"#impl-Zeroize-for-EphemeralSecret%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> for <a class=\"struct\" href=\"elliptic_curve/ecdh/struct.EphemeralSecret.html\" title=\"struct elliptic_curve::ecdh::EphemeralSecret\">EphemeralSecret</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,\n    &lt;C as <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ScalarArithmetic\">ScalarArithmetic</a>&gt;::<a class=\"associatedtype\" href=\"elliptic_curve/arithmetic/trait.ScalarArithmetic.html#associatedtype.Scalar\" title=\"type elliptic_curve::arithmetic::ScalarArithmetic::Scalar\">Scalar</a>: <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/elliptic_curve/ecdh.rs.html#149\">source</a><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zeroize/trait.Zeroize.html#tymethod.zeroize\" class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","p256::ecdh::EphemeralSecret"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[9430]}