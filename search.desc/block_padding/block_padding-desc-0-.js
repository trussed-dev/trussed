searchState.loadedDescShard("block_padding", 0, "Padding and unpadding of messages divided into blocks.\nAmbiguous padding\nPad block with zeros except the last byte which will be …\nBlock size.\nPad block with arbitrary bytes ending with value equal to …\nPad block with byte sequence <code>\\x80 00...00 00</code>.\nDon’t pad the data. Useful for key wrapping.\nNo padding, message must be multiple of block size\nPadding types\nTrait for padding messages divided into blocks\nPad block with bytes with value equal to the number of …\nTrait for padding messages divided into blocks of …\nReversible padding\nPadding type\nPadding type\nFailed unpadding operation error.\nPad block with zeros.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPads <code>block</code> filled with data up to <code>pos</code> (i.e length of a …\nPads <code>block</code> filled with data up to <code>pos</code> (i.e length of a …\nUnpad data in the <code>block</code>.\nUnpad data in the <code>block</code>.\nUnpad data in the <code>blocks</code>.")