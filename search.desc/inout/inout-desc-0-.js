searchState.loadedDescShard("inout", 0, "Collection of custom reference types for code generic over …\nCustom pointer type which contains one immutable (input) …\nCustom slice type which references one immutable (input) …\nIterator over <code>InOutBuf</code>.\nCustom slice type which references one immutable (input) …\nThe error returned when slice can not be converted into …\nThe error returned when input and output slices have …\nOutput buffer is smaller than input buffer.\nPadding error. Usually emitted when size of output buffer …\nVariant of <code>InOutBuf</code> with optional padded tail block.\nClone input value and return it.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate <code>InOutBuf</code> from a single mutable reference.\nCrate <code>InOutBufReserved</code> from a single mutable slice.\nCreate <code>InOut</code> from raw input and output pointers.\nCreate <code>InOutBuf</code> from raw input and output pointers.\nCreate <code>InOutBufReserved</code> from raw input and output pointers.\nCreate <code>InOutBuf</code> from a pair of immutable and mutable …\nCrate <code>InOutBufReserved</code> from two separate slices.\nReturns <code>InOut</code> for the given position.\nReturns <code>InOut</code> for given position.\nGet full blocks.\nGet immutable reference to the input value.\nGet input slice.\nGet input slice.\nGet input buffer length.\nGet mutable reference to the output value.\nGet output slice.\nGet output slice.\nGet output buffer length.\nGet padded tail block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>InOut</code> array to <code>InOutBuf</code>.\nPartition buffer into 2 parts: buffer of arrays and tail.\nConsume self and return output slice with lifetime <code>&#39;a</code>.\nConvert buffer into output slice.\nTransform buffer into <code>PaddedInOutBuf</code> using padding …\nConvert <code>self</code> to a pair of raw input and output pointers.\nGet raw input and output pointers.\nGet raw input and output pointers.\nReturns <code>true</code> if the buffer has a length of 0.\nGet length of the inner buffers.\nCreate <code>InOutBuf</code> from immutable and mutable slices.\nReborrow <code>self</code>.\nReborrow <code>self</code>.\nDivides one buffer into two at <code>mid</code> index.\nXOR <code>data</code> with values behind the input slice and write …\nXOR <code>data</code> with values behind the input slice and write …\nXORs <code>data</code> with values behind the input slice and write …")