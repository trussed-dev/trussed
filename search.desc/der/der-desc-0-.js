searchState.loadedDescShard("der", 0, "Pure Rust embedded-friendly implementation of the …\n<code>APPLICATION</code>: types whose meaning is specific to an …\nApplication tag.\n<code>BIT STRING</code> tag: 0x03\n<code>BOOLEAN</code> tag: 0x01\nASN.1 <code>CHOICE</code> denotes a union of one or more possible …\nDerive the <code>Choice</code> trait on an enum.\nClass of an ASN.1 tag.\n<code>CONTEXT-SPECIFIC</code>: types whose meaning is specific to a …\nContext-specific tag.\nDecoding trait.\nDER decoder.\nIndicates a field which is duplicated when only one is …\nEncoding trait.\nDER encoder.\nContains the error value\nError type.\nError type.\nThis error indicates a previous DER parsing operation …\n<code>GeneralizedTime</code> tag: 0x18\nASN.1 DER headers: tag + length component of TLV-encoded …\n<code>IA5String</code> tag: 0x16\n<code>INTEGER</code> tag: 0x02\nASN.1-encoded length.\nIncorrect length for a given field.\nMaximum length currently supported: 256 MiB\nMaximum tag number supported (inclusive).\nMalformed OID\nDerive the <code>Message</code> trait on a struct.\nMessage is not canonically encoded.\n<code>NULL</code> tag: 0x05\nLength of <code>1</code>\n<code>OBJECT IDENTIFIER</code> tag: 0x06\n<code>OCTET STRING</code> tag: 0x04\nContains the success value\nInteger overflow occurred (library bug!).\nMessage is longer than this library’s internal limits …\n<code>PrintableString</code> tag: 0x13\n<code>PRIVATE</code>: types whose meaning is specific to a given …\nPrivate tag number.\nResult type.\n<code>SEQUENCE</code> tag: 0x10\n<code>SET</code> and <code>SET OF</code> tag: 0x11\nASN.1 tag\nASN.1 tags.\nASN.1 tag numbers (i.e. lower 5 bits of a <code>Tag</code>).\nTypes with an associated ASN.1 <code>Tag</code>.\nUndecoded trailing data at end of message.\nUnexpected end-of-message/nested field when decoding.\nEncoded message is shorter than the expected length.\nUnexpected tag.\n<code>UNIVERSAL</code>: built-in types whose meaning is the same in all …\nUnknown/unsupported tag.\n<code>UTCTime</code> tag: 0x17\nUTF-8 errors.\n<code>UTF8String</code> tag: 0x0C\nUnexpected value.\nLength of <code>0</code>\nAttempt to decode an ASN.1 <code>ANY</code> value.\nAttempt to decode an <code>OPTIONAL</code> ASN.1 <code>ANY</code> value.\nCreate an <code>APPLICATION</code> tag with this tag number.\nASN.1 built-in types.\nAssert that this <code>Tag</code> matches the provided expected tag.\nAnnotate an <code>ErrorKind</code> with context about where it occurred,\nAttempt to decode an ASN.1 <code>BIT STRING</code>.\nEncode the provided value as an ASN.1 <code>BIT STRING</code>\nIs the provided <code>Tag</code> decodable as a variant of this <code>CHOICE</code>?\nGet the <code>Class</code> that corresponds to this <code>Tag</code>.\nAttempt to decode an ASN.1 <code>CONTEXT-SPECIFIC</code> field with the …\nCreate a <code>CONTEXT-SPECIFIC</code> tag with this tag number.\nAttempt to decode this message using the provided decoder.\nDecode a value which impls the <code>Decodable</code> trait.\nEncode this value as ASN.1 DER using the provided <code>Encoder</code>.\nEncode a value which impls the <code>Encodable</code> trait.\nEncode this value to the provided byte slice, returning a …\nEncode this value to the provided byte slice, returning a …\nCompute the length of this value in bytes when encoded as …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nFinish decoding, returning the given value if there is no …\nFinish encoding to the buffer, returning a slice …\nGet the length of DER Tag-Length-Value (TLV) encoded data …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse <code>Self</code> from the provided DER-encoded byte slice.\nParse <code>Self</code> from the provided DER-encoded byte slice.\nAttempt to decode an ASN.1 <code>GeneralizedTime</code>.\nEncode the provided value as an ASN.1 <code>GeneralizedTime</code>\nAttempt to decode an ASN.1 <code>IA5String</code>.\nEncode the provided value as an ASN.1 <code>IA5String</code>\nAttempt to decode ASN.1 <code>INTEGER</code> as <code>i16</code>\nAttempt to decode ASN.1 <code>INTEGER</code> as <code>i8</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDid the decoding operation fail due to an error?\nDid the decoding operation fail due to an error?\nHave we decoded all of the bytes in this <code>Decoder</code>?\nGet the <code>ErrorKind</code> which occurred.\nLength of the encoded value\nThe <code>Message</code> trait simplifies writing decoders/encoders …\nEncode a message with the provided <code>Encodable</code> fields as an …\nFor errors occurring inside of a nested message, extend …\nCreate a new decoder for the given byte slice.\nCreate a new encoder with the given byte slice as a …\nCreate a new <code>Error</code>.\nCreate a new <code>Header</code> from a <code>Tag</code> and a specified length.\nCreate a new <code>Length</code> for any value which fits inside of a …\nCreate a new tag number (const-friendly).\nCreate an <code>Error</code> for an non-canonical value with the ASN.1 …\nAttempt to decode an ASN.1 <code>NULL</code> value.\nEncode an ASN.1 <code>NULL</code> value.\nGet the octet encoding for this <code>Tag</code>.\nAttempt to decode an ASN.1 <code>OCTET STRING</code>.\nEncode the provided value as an ASN.1 <code>OCTET STRING</code>\nAttempt to decode an ASN.1 <code>OPTIONAL</code> value.\nGet the position inside of the message where the error …\nAttempt to decode an ASN.1 <code>PrintableString</code>.\nEncode the provided value as an ASN.1 <code>PrintableString</code>\nCreate a <code>PRIVATE</code> tag with this tag number.\nAttempt to decode an ASN.1 <code>SEQUENCE</code>, creating a new nested …\nEncode an ASN.1 <code>SEQUENCE</code> of the given length.\nTag representing the type of the encoded value\nAttempt to decode unsigned ASN.1 <code>INTEGER</code> as <code>u16</code>\nAttempt to decode unsigned ASN.1 <code>INTEGER</code> as <code>u8</code>\nAttempt to decode an ASN.1 <code>INTEGER</code> as a <code>UIntBytes</code>.\nCreate an <code>Error</code> because the current tag was unexpected, …\nAttempt to decode an ASN.1 <code>UTCTime</code>.\nEncode the provided value as an ASN.1 <code>UTCTime</code>\nAttempt to decode an ASN.1 <code>UTF8String</code>.\nEncode the provided value as an ASN.1 <code>Utf8String</code>\nGet the inner value.\nReturn an error for an invalid value with the given tag.\nReturn an error for an invalid value with the given tag.\nCreate an <code>Error</code> for an invalid value with the ASN.1 type …\nActual length\nActual tag encountered in the message.\nRaw byte value of the tag.\nLength of the decoded data.\nExpected length\nTag the decoder was expecting (if there is a single such …\nTotal length of the remaining data left in the buffer.\nTag of the duplicated field.\nTag of the value being decoded.\nTag of the value which is not canonically encoded.\nTag of the unexpected value.\nASN.1 <code>ANY</code>: represents any explicitly tagged ASN.1 value.\nASN.1 <code>BIT STRING</code> type.\nContext-specific field.\nASN.1 <code>GeneralizedTime</code> type.\nASN.1 <code>IA5String</code> type.\nIterator over the elements of the set.\nLength of an RFC 5280-flavored ASN.1 DER-encoded …\nLength of an RFC 5280-flavored ASN.1 DER-encoded <code>UtcTime</code>.\nASN.1 <code>NULL</code> type.\nASN.1 <code>OCTET STRING</code> type.\nASN.1 <code>PrintableString</code> type.\nASN.1 <code>SEQUENCE</code> type.\nASN.1 <code>SEQUENCE</code> iterator for <code>Sequence</code> containing …\nASN.1 <code>SET OF</code> denotes a collection of zero or more …\nASN.1 <code>SET OF</code> backed by a byte slice containing serialized …\nIterator over the elements of an <code>SetOfRef</code>.\n“Big” unsigned ASN.1 <code>INTEGER</code> type.\nASN.1 <code>UTCTime</code> type.\nASN.1 <code>UTF8String</code> type.\nGet the raw value for this <code>Any</code> type as a byte slice.\nBorrow the inner byte slice.\nBorrow the string as bytes.\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice.\nBorrow the string as bytes.\nBorrow the inner byte sequence.\nBorrow the inner byte sequence.\nBorrow the string as bytes.\nBorrow the string as a <code>str</code>.\nBorrow the string as a <code>str</code>.\nBorrow the string as a <code>str</code>.\nAttempt to decode an ASN.1 <code>BIT STRING</code>.\nAttempt to decode an ASN.1 <code>CONTEXT-SPECIFIC</code> field.\nDecode values nested within a sequence, creating a new …\nIterate over the elements of the set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to decode an ASN.1 <code>GeneralizedTime</code>.\nAttempt to decode an ASN.1 <code>IA5String</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the body of this <code>Any</code> type empty?\nIs the inner byte slice empty?\nIs the inner string empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner string empty?\nIs the inner string empty?\nIs this value an ASN.1 NULL value?\nIterate over the values in a heterogenously typed sequence.\nGet the <code>Length</code> of this <code>Any</code> type’s value.\nGet the length of the inner byte slice (sans leading <code>0</code> …\nGet the length of the inner byte slice.\nGet the length of this <code>UIntBytes</code> in bytes.\nGet the length of the inner byte slice.\nGet the length of the inner byte slice.\nGet the length of the inner byte slice.\nCreate a new <code>Any</code> from the provided <code>Tag</code> and byte slice.\nCreate a new ASN.1 <code>BIT STRING</code> from a byte slice.\nCreate a new <code>GeneralizedTime</code> given a <code>Duration</code> since …\nCreate a new <code>IA5String</code>.\nCreate a new <code>UIntBytes</code> from a byte slice.\nCreate a new ASN.1 <code>OCTET STRING</code> from a byte slice.\nCreate a new ASN.1 <code>PrintableString</code>.\nCreate a new <code>SetOfRef</code> from a slice.\nCreate a new <code>UtcTime</code> given a <code>Duration</code> since <code>UNIX_EPOCH</code> …\nCreate a new ASN.1 <code>UTF8String</code>.\nAttempt to decode an ASN.1 <code>OCTET STRING</code>.\nAttempt to decode an ASN.1 <code>OPTIONAL</code> value.\nAttempt to decode an ASN.1 <code>PrintableString</code>.\nAttempt to decode this value an ASN.1 <code>SEQUENCE</code>, creating a …\nGet the tag for this <code>Any</code> type.\nContext-specific tag number sans the leading <code>0b10000000</code> …\nGet the duration of this timestamp since <code>UNIX_EPOCH</code>.\nGet the duration of this timestamp since <code>UNIX_EPOCH</code>.\nAttempt to decode an ASN.1 <code>UTCTime</code>.\nAttempt to decode an ASN.1 <code>UTF8String</code>.\nValue of the field.\nMessages encoded as an ASN.1 <code>SEQUENCE</code>.\nObtain the length of an ASN.1 <code>SEQUENCE</code> consisting of the …\nCall the provided function with a slice of <code>Encodable</code> trait …")