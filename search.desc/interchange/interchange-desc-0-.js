searchState.loadedDescShard("interchange", 0, "Implement a somewhat convenient and somewhat efficient way …\nThe requester is building a request, using the …\nThe responder is building a response, using the …\nChannel used for Request/Response mechanism.\nThe requester may send a new request.\nSet of <code>N</code> channels\nInterchange witout the <code>const N: usize</code> generic parameter …\nThe request is pending either processing by responder or …\nRequester end of a channel\nThe responder sent a response.\nResponder end of a channel\nState of the RPC interchange\nReturns a reference to the interchange with the <code>N</code> …\nAttempt to cancel a request.\nClaim one of the channels of the interchange. Returns None …\nClaim one of the channels of the interchange. Returns None …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new Interchange\nSend a request to the responder.\nIf there is a request waiting, obtain a reference to it\nInitialize a request with its default values and and …\nObtain the requester end of the channel if it hasn’t …\nRespond to a request.\nObtain the responder end of the channel if it hasn’t …\nIf there is a response waiting, obtain a reference to it\nInitialize a response with its default values and and …\nSend a request that was already placed in the channel …\nSend a response that was already placed in the channel …\nObtain both the requester and responder ends of the …\nCurrent state of the channel.\nCurrent state of the channel.\nIf there is a request waiting, take a reference to it out\nLook for a response. If the responder has sent a response, …\nIf there is a request waiting, perform an operation with a …\nInitialize a request with its default values and mutates …\nIf there is a request waiting, perform an operation with a …\nInitialize a response with its default values and mutates …")