searchState.loadedDescShard("aead", 0, "Authenticated Encryption with Associated Data (AEAD) traits\nAuthenticated Encryption with Associated Data (AEAD) …\nIn-place stateless AEAD trait.\nIn-place stateful AEAD trait.\nIn-place encryption/decryption byte buffers.\nThe upper bound amount of additional space required to …\nContains the error value\nError type.\nKey used by <code>KeySizeUser</code> implementors.\nTypes which can be initialized from key.\nKey size in bytes.\nTypes which use key for initialization.\nNonce: single-use value for ensuring ciphertexts are unique\nThe length of a nonce.\nContains the success value\nResult type alias with <code>Error</code>.\nTag: authentication code which ensures ciphertexts are …\nThe maximum length of the nonce.\nType aliases for many constants.\nDecrypt the message in-place, returning an error in the …\nDecrypt the message in-place, returning an error in the …\nDecrypt the message in-place, returning an error in the …\nDecrypt the data in-place, returning an error in the event …\nEncrypt the given buffer containing a plaintext message …\nEncrypt the given buffer containing a plaintext message …\nEncrypt the data in-place, returning the authentication tag\nEncrypt the data in-place, returning the authentication tag\nExtend this buffer from the given slice\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIs the buffer empty?\nReturn key size in bytes.\nGet the length of the buffer\nCreate new value from fixed size key.\nCreate new value from variable size key.\nTruncate this buffer to the given size\nThe type-level bit 0.\nThe type-level bit 1.\nThe type-level signed integer 0.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing the integer 0.")