searchState.loadedDescShard("littlefs2", 1, "Re-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>. The type-level signed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing the integer 0.\nNumber of erasable blocks. Hence storage capacity is …\nSuggested values are 100-1000, higher is more performant …\nSize of an erasable block in bytes, as unsigned typenum. …\nlittlefs uses a read cache, a write cache, and one cache …\nSize of the lookahead buffer used by littlefs, measured in …\nMinimum size of block read in bytes. Not in superblock\nUsers of this library provide a “storage driver” by …\nMinimum size of block write in bytes. Not in superblock\nErase data from the storage device. Guaranteed to be …\nRead data from the storage device. Guaranteed to be called …\nWrite data to the storage device. Guaranteed to be called …\nCustom user attribute that can be set on files and …\nThe state of a <code>File</code>. Pre-allocate with <code>File::allocate</code>.\nRegular file vs directory\nFile type (regular vs directory) and size of a file.\nOptions and flags which can be used to configure how a …\nRead attribute.\nAvailable number of unused blocks in the filesystem\nAvailable number of unused bytes in the filesystem\nSync the file and drop it from the internal linked list. …\nCreates a new, empty directory at the provided path.\nRecursively create a directory and all of its parent …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstruct <code>Filesystem</code>, intention is to allow access to …\nSize of the file in bytes.\nGiven a path, query the filesystem to get information …\nThis API avoids the need for using <code>Allocation</code>.\nOpen the file with the options previously specified, …\n(Hopefully) safe abstraction around <code>open</code>.\nReturns the full path to the file that this entry …\nRead the entire contents of a file into a bytes vector.\nRead a chunk of a file into a bytes vector Returns the …\nReturns a pseudo-iterator over the entries within a …\nRemove a file or directory.\nRemove attribute.\nRemove a file or directory.\nTODO: This method fails if some <code>println!</code> calls are removed.\nRename or move a file or directory.\nSet attribute.\nTruncates or extends the underlying file, updating the …\nSynchronize file contents to storage.\nTotal number of blocks in the filesystem\nTotal number of bytes in the filesystem\nReturns a new OpenOptions object.\nWrite a slice as the entire contents of a file.\nWrite a slice as a chunk of a file.\nBad file descriptor.\nFile or filesystem was corrupt.\nDirectory was not empty.\nFile or directory already exists.\nContains the error value\nDefinition of errors that might be returned by filesystem …\nFile is too big.\nFilename too long\nIncorrect value specified to function.\nInput / output error occurred.\nNo attribute or data available\nNo memory available for completing request.\nNo space left available for operation.\nNo entry found with that name.\nContains the success value\nEnumeration of possible methods to seek within an file …\nPath specification is to a directory.\nPath name is not a directory.\nThe <code>Read</code> trait allows for reading bytes from a file.\nThe <code>Seek</code> trait provides a cursor which can be moved within …\nEnumeration of possible methods to seek within an I/O …\nError code was &gt;=0, operation was successful.\nUnknown error occurred, integer code specified.\nThe <code>Write</code> trait allows for writing bytes to a file.\nWrite out all pending writes to storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExport of the Read, Write and Seek traits for ease of use.\nRead at most buf.len() bytes. Upon success, return how …\nSeek to an offset in bytes. If successful, returns the new …\nWrite at most data.len() bytes. The file will not …\nObject-safe trait for <code>File</code>.\nObject-safe trait for <code>Filesystem</code>.\nObject-safe trait for <code>Storage</code>.\nIterator over the ancestors of a Path\nContains the error value\nErrors that arise from converting byte buffers into paths\nIterator over the components of a Path\nByte buffer contains non-ASCII characters\nByte buffer is not a C string\nContains the success value\nA path\nAn owned, mutable path\nResult type that has its Error variant set to <code>path::Error</code>\nByte buffer is too long (longer than …\nIterate over the ancestors of the path\nCompare the path using their string representation\nCompare the path using their string representation This …\nGet the name of the file this path points to if it points …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAccepts byte string, with or without trailing nul.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a path from a byte buffer\nUnchecked version of <code>from_bytes_with_nul</code>\nCreates a path from a C string\nUnchecked version of <code>from_cstr</code>\nCreates a path from a string.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if the path is empty\nIterate over the components of the path\nCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.\nExtends <code>self</code> with <code>path</code>")