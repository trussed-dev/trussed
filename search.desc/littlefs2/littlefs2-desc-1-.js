searchState.loadedDescShard("littlefs2", 1, "Re-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>.\nRe-export of <code>typenum::consts</code>. The type-level signed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing the integer 0.\nNumber of erasable blocks. Hence storage capacity is …\nSuggested values are 100-1000, higher is more performant …\nSize of an erasable block in bytes, as unsigned typenum. …\nlittlefs uses a read cache, a write cache, and one cache …\nSize of the lookahead buffer used by littlefs, measured in …\nMinimum size of block read in bytes. Not in superblock\nUsers of this library provide a “storage driver” by …\nMinimum size of block write in bytes. Not in superblock\nErase data from the storage device. Guaranteed to be …\nRead data from the storage device. Guaranteed to be called …\nWrite data to the storage device. Guaranteed to be called …\nOpen the file in append only mode.\nCustom user attribute that can be set on files and …\nCreate the file if it does not exist.\nFail if creating a file that already exists. TODO: Good …\nThe state of a <code>File</code>. Pre-allocate with <code>File::allocate</code>.\nDefinition of file open flags which can be mixed and …\nRegular file vs directory\nFile type (regular vs directory) and size of a file.\nOptions and flags which can be used to configure how a …\nOpen file in read only mode.\nOpen file for reading and writing.\nTruncate the file if it already exists.\nOpen file in write only mode.\nGet a flags value with all known bits set.\nRead attribute.\nAvailable number of unused blocks in the filesystem\nAvailable number of unused bytes in the filesystem\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSync the file and drop it from the internal linked list. …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nCreates a new, empty directory at the provided path.\nRecursively create a directory and all of its parent …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nCheck whether a file or directory exists at a path.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstruct <code>Filesystem</code>, intention is to allow access to …\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nSize of the file in bytes.\nGiven a path, query the filesystem to get information …\nThis API avoids the need for using <code>Allocation</code>.\nMount the filesystem or, if that fails, call <code>f</code> with the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nOpen the file with the options previously specified, …\n(Hopefully) safe abstraction around <code>open</code>.\nReturns the full path to the file that this entry …\nRead the entire contents of a file into a bytes vector.\nRead a chunk of a file into a bytes vector Returns the …\nReturns a pseudo-iterator over the entries within a …\nRemove a file or directory.\nThe intersection of a source flags value with the …\nRemove attribute.\nRemove a file or directory.\nTODO: This method fails if some <code>println!</code> calls are removed.\nRename or move a file or directory.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet attribute.\nTruncates or extends the underlying file, updating the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSynchronize file contents to storage.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTotal number of blocks in the filesystem\nTotal number of bytes in the filesystem\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns a new OpenOptions object.\nWrite a slice as the entire contents of a file.\nWrite a slice as a chunk of a file.\nBad file descriptor.\nFile or filesystem was corrupt.\nDirectory was not empty.\nFile or directory already exists.\nContains the error value\nThe error type for filesystem operations.\nFilename too long\nFile is too big.\nIncorrect value specified to function.\nInput / output error occurred.\nNo attribute or data available\nNo memory available for completing request.\nNo space left available for operation.\nNo entry found with that name.\nContains the success value\nEnumeration of possible methods to seek within an file …\nPath specification is to a directory.\nPath name is not a directory.\nThe <code>Read</code> trait allows for reading bytes from a file.\nThe <code>Seek</code> trait provides a cursor which can be moved within …\nEnumeration of possible methods to seek within an I/O …\nThe <code>Write</code> trait allows for writing bytes to a file.\nReturn the error code of this error.\nWrite out all pending writes to storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct an <code>Error</code> from an error code.\nExport of the Read, Write and Seek traits for ease of use.\nRead at most buf.len() bytes. Upon success, return how …\nSeek to an offset in bytes. If successful, returns the new …\nWrite at most data.len() bytes. The file will not …\nThe <code>Read</code> trait allows for reading bytes from a file.\nThe <code>Seek</code> trait provides a cursor which can be moved within …\nEnumeration of possible methods to seek within an I/O …\nThe <code>Write</code> trait allows for writing bytes to a file.\nWrite out all pending writes to storage.\nRead at most buf.len() bytes. Upon success, return how …\nSeek to an offset in bytes. If successful, returns the new …\nWrite at most data.len() bytes. The file will not …\nObject-safe trait for files.\nObject-safe trait for filesystems.\nObject-safe trait for <code>Storage</code>.\nIterator over the ancestors of a Path\nContains the error value\nErrors that arise from converting byte buffers into paths\nIterator over the components of a Path\nByte buffer contains non-ASCII characters\nByte buffer is not a C string\nContains the success value\nA path\nAn owned, mutable path\nByte buffer is too long (longer than …\nIterate over the ancestors of the path\nReturns the inner pointer to this C string.\nCompare the path using their string representation\nCompare the path using their string representation This …\nGet the name of the file this path points to if it points …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a from a raw buffer containing a null-terminated …\nCreates a path from a byte buffer.\nCreates a path from a C string.\nCreates a path from a C string without checking the …\nCreates a path from a string.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if the path is empty\nIterate over the components of the path\nCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.\nExtends <code>self</code> with <code>path</code>")